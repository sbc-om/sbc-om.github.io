---
interface Project {
  name: string;
  desc: string;
  link: string | null;
  ghLink: string | null;
  tech: string[];
  image?: string;
  category: 'blockchain' | 'ai' | 'defi' | 'enterprise';
  featured?: boolean;
}

const projects: Project[] = [
  {
    name: "DeFi Vault",
    desc: "A revolutionary decentralized finance platform enabling secure and transparent lending and borrowing using cutting-edge blockchain technology.",
    tech: ["Ethereum Smart Contracts", "Solidity", "Web3.js", "React", "TailwindCSS", "Metamask Integration"],
    link: "https://defivault.seniorblockchain.io",
    ghLink: "https://github.com/seniorblockchain/defivault",
    category: "defi",
    featured: true
  },
  {
    name: "AI-Powered Investment Tracker",
    desc: "An intelligent investment management platform that provides real-time analytics and portfolio optimization using advanced AI algorithms.",
    tech: ["Python", "TensorFlow", "Flask", "React", "TailwindCSS", "CoinGecko API"],
    link: "https://investmenttracker.seniorblockchain.io",
    ghLink: "https://github.com/seniorblockchain/investmenttracker",
    category: "ai",
    featured: true
  },
  {
    name: "Blockchain Voting System",
    desc: "A secure, tamper-proof blockchain-based voting system ensuring complete transparency and integrity for democratic elections.",
    tech: ["Hyperledger Fabric", "Node.js", "React", "Docker", "Kubernetes", "TailwindCSS"],
    link: "https://votingsystem.seniorblockchain.io",
    ghLink: "https://github.com/seniorblockchain/votingsystem",
    category: "blockchain",
    featured: true
  },
  {
    name: "AI Legal Advisor",
    desc: "An AI-powered legal assistant that provides intelligent document analysis and comprehensive risk assessment for businesses.",
    tech: ["Python", "OpenAI GPT", "FastAPI", "Vue.js", "TailwindCSS", "MongoDB"],
    link: "https://ailegaladvisor.seniorblockchain.io",
    ghLink: "https://github.com/seniorblockchain/ailegaladvisor",
    category: "ai"
  },
  {
    name: "Supply Chain Tracker",
    desc: "A comprehensive blockchain solution for real-time tracking and verification of goods in supply chains, improving transparency.",
    tech: ["Ethereum", "IPFS", "Solidity", "React", "GraphQL", "Material-UI"],
    link: "https://supplychain.seniorblockchain.io",
    ghLink: "https://github.com/seniorblockchain/supplychain",
    category: "enterprise"
  }
];

const categories = [
  { id: 'all', name: 'All Projects', icon: 'fa-solid fa-grid' },
  { id: 'blockchain', name: 'Blockchain', icon: 'fa-solid fa-link' },
  { id: 'ai', name: 'AI Solutions', icon: 'fa-solid fa-brain' },
  { id: 'defi', name: 'DeFi', icon: 'fa-solid fa-coins' },
  { id: 'enterprise', name: 'Enterprise', icon: 'fa-solid fa-building' }
];
---

<section id="portfolio" class="py-20 bg-gradient-to-b from-base-100 to-base-200">
  <div class="max-w-7xl mx-auto px-8">
    <!-- Section Header -->
    <div class="text-center mb-16">
      <h2 class="text-5xl md:text-7xl font-black text-primary mb-6 tracking-tight">
        Our Portfolio
      </h2>
      <p class="text-xl md:text-2xl text-base-content/80 max-w-3xl mx-auto leading-relaxed">
        Discover our innovative projects that are transforming industries through blockchain and AI
      </p>
    </div>

    <!-- Category Filter -->
    <div class="flex flex-wrap justify-center gap-4 mb-12">
      {categories.map((category) => (
        <button 
          class="portfolio-filter btn btn-outline hover:btn-primary transition-all duration-300 group"
          data-category={category.id}
        >
          <i class={`${category.icon} mr-2 group-hover:scale-110 transition-transform duration-300`}></i>
          {category.name}
        </button>
      ))}
    </div>

    <!-- Featured Projects -->
    <div class="mb-16">
      <h3 class="text-3xl font-bold text-center mb-8 text-primary">Featured Projects</h3>
      <div class="grid md:grid-cols-3 gap-8">
        {projects.filter(p => p.featured).map((project) => (
          <div 
            class="portfolio-item group bg-base-100 rounded-3xl p-8 shadow-xl hover:shadow-2xl transition-all duration-500 transform hover:-translate-y-2 border border-base-300"
            data-category={project.category}
          >
            <!-- Project Header -->
            <div class="flex items-start justify-between mb-6">
              <div class="flex-1">
                <h4 class="text-2xl font-bold text-primary group-hover:text-secondary transition-colors duration-300">
                  {project.name}
                </h4>
                <span class="inline-block px-3 py-1 text-xs font-semibold bg-primary/10 text-primary rounded-full mt-2 capitalize">
                  {project.category}
                </span>
              </div>
              <div class="text-4xl text-primary/20 group-hover:text-primary/40 transition-colors duration-300">
                <i class="fa-solid fa-star"></i>
              </div>
            </div>

            <!-- Project Description -->
            <p class="text-base-content/80 leading-relaxed mb-6 line-clamp-3">
              {project.desc}
            </p>

            <!-- Tech Stack -->
            <div class="mb-6">
              <div class="flex flex-wrap gap-2">
                {project.tech.slice(0, 3).map((tech) => (
                  <span class="px-2 py-1 text-xs bg-base-200 text-base-content rounded-lg font-medium">
                    {tech}
                  </span>
                ))}
                {project.tech.length > 3 && (
                  <span class="px-2 py-1 text-xs bg-accent/20 text-accent rounded-lg font-medium">
                    +{project.tech.length - 3} more
                  </span>
                )}
              </div>
            </div>

            <!-- Action Buttons -->
            <div class="flex gap-3">
              {project.link && (
                <a
                  href={project.link}
                  target="_blank"
                  class="btn btn-primary btn-sm flex-1 group/btn"
                >
                  <i class="fa-solid fa-external-link mr-2 group-hover/btn:translate-x-1 transition-transform duration-300"></i>
                  Live Demo
                </a>
              )}
              {project.ghLink && (
                <a
                  href={project.ghLink}
                  target="_blank"
                  class="btn btn-outline btn-sm"
                >
                  <i class="fa-brands fa-github text-lg"></i>
                </a>
              )}
            </div>
          </div>
        ))}
      </div>
    </div>

    <!-- All Projects Grid -->
    <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8" id="projects-grid">
      {projects.map((project) => (
        <div 
          class="portfolio-item group bg-base-100 rounded-2xl p-6 shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1 border border-base-300"
          data-category={project.category}
        >
          <!-- Project Header -->
          <div class="mb-4">
            <div class="flex items-center justify-between mb-2">
              <h4 class="text-xl font-bold text-primary group-hover:text-secondary transition-colors duration-300">
                {project.name}
              </h4>
              <span class="px-2 py-1 text-xs font-semibold bg-primary/10 text-primary rounded-full capitalize">
                {project.category}
              </span>
            </div>
          </div>

          <!-- Project Description -->
          <p class="text-base-content/80 text-sm leading-relaxed mb-4 line-clamp-2">
            {project.desc}
          </p>

          <!-- Tech Stack Preview -->
          <div class="mb-4">
            <div class="flex flex-wrap gap-1">
              {project.tech.slice(0, 2).map((tech) => (
                <span class="px-2 py-1 text-xs bg-base-200 text-base-content rounded font-medium">
                  {tech}
                </span>
              ))}
              {project.tech.length > 2 && (
                <span class="px-2 py-1 text-xs bg-accent/20 text-accent rounded font-medium">
                  +{project.tech.length - 2}
                </span>
              )}
            </div>
          </div>

          <!-- Action Buttons -->
          <div class="flex gap-2">
            {project.link && (
              <a
                href={project.link}
                target="_blank"
                class="btn btn-primary btn-xs flex-1"
              >
                <i class="fa-solid fa-external-link mr-1"></i>
                Demo
              </a>
            )}
            {project.ghLink && (
              <a
                href={project.ghLink}
                target="_blank"
                class="btn btn-outline btn-xs"
              >
                <i class="fa-brands fa-github"></i>
              </a>
            )}
          </div>
        </div>
      ))}
    </div>

    <!-- View More Button -->
    <div class="text-center mt-12">
      <a 
        href="/work" 
        class="btn btn-primary btn-lg px-8 py-4 rounded-full hover:scale-105 transition-all duration-300 group"
      >
        <span class="mr-2">View All Projects</span>
        <i class="fa-solid fa-arrow-right group-hover:translate-x-1 transition-transform duration-300"></i>
      </a>
    </div>
  </div>
</section>

<script>
  // Portfolio filtering functionality
  document.addEventListener('DOMContentLoaded', function() {
    const filterButtons = document.querySelectorAll('.portfolio-filter');
    const portfolioItems = document.querySelectorAll('.portfolio-item');

    filterButtons.forEach(button => {
      button.addEventListener('click', function(this: HTMLElement) {
        const category = this.getAttribute('data-category');
        
        // Update active button
        filterButtons.forEach(btn => btn.classList.remove('btn-primary'));
        filterButtons.forEach(btn => btn.classList.add('btn-outline'));
        this.classList.remove('btn-outline');
        this.classList.add('btn-primary');

        // Filter items
        portfolioItems.forEach(item => {
          const itemCategory = item.getAttribute('data-category');
          const htmlItem = item as HTMLElement;
          
          if (category === 'all' || itemCategory === category) {
            htmlItem.style.display = 'block';
            htmlItem.style.opacity = '0';
            htmlItem.style.transform = 'translateY(20px)';
            
            setTimeout(() => {
              htmlItem.style.opacity = '1';
              htmlItem.style.transform = 'translateY(0)';
            }, 100);
          } else {
            htmlItem.style.opacity = '0';
            htmlItem.style.transform = 'translateY(-20px)';
            
            setTimeout(() => {
              htmlItem.style.display = 'none';
            }, 300);
          }
        });
      });
    });

    // Set initial active state
    const allButton = document.querySelector('[data-category="all"]') as HTMLElement;
    if (allButton) {
      allButton.click();
    }
  });
</script>

<style>
  .portfolio-item {
    transition: all 0.3s ease;
  }
  
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
